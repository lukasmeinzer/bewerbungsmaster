name: Deploy Webapp

on:
  push:
    branches:
      - Tests

jobs:
  test_backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -f backend/Dockerfile -t backend-test ./backend

      - name: Start Backend Service
        run: docker run -d --name backend-test -p 8000:8000 backend-test

      - name: Wait for Backend to Start
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8000/ping > /dev/null; then
              echo "Backend is up!";
              exit 0;
            fi
            echo "Waiting for backend...";
            sleep 3;
          done;
          echo "Backend did not start in time.";
          exit 1

      - name: Run Tests
        run: |
          pip install pytest httpx
          pytest backend/tests/tests.py

      - name: Cleanup
        if: always()
        run: docker stop backend-test && docker rm backend-test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test-backend  # Ensure this job only runs after test-backend succeeds

    steps:
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh                
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa 
        chmod 600 ~/.ssh/id_rsa       
        ssh-keyscan -H "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts

    - name: Build and Run Docker Container
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << EOF
          cd git_local/bewerbungsmaster
          git pull
          docker compose down || true
          docker compose up -d --build
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}