name: Deploy Webapp

on:
  push:
    branches:
      - Tests

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Compose for Testing
        run: |
          docker-compose -f backend/docker-compose.test.yml up -d

      - name: Wait for Services to Be Ready
        run: |
          for i in {1..10}; do
            if docker-compose -f backend/docker-compose.test.yml logs backend | grep -q "Application startup complete"; then
              echo "Backend is ready";
              exit 0;
            fi;
            echo "Waiting for backend...";
            sleep 5;
          done;
          echo "Backend failed to start in time";
          docker-compose -f backend/docker-compose.test.yml logs;
          exit 1;

      - name: Run Tests
        run: |
          docker-compose -f backend/docker-compose.test.yml exec backend pytest tests/tests.py

      - name: Tear Down Test Environment
        if: always()
        run: |
          docker-compose -f backend/docker-compose.test.yml down


  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test-backend  # Ensure this job only runs after test-backend succeeds

    steps:
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh                
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa 
        chmod 600 ~/.ssh/id_rsa       
        ssh-keyscan -H "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts

    - name: Build and Run Docker Container
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << EOF
          cd git_local/bewerbungsmaster
          git pull
          docker compose down || true
          docker compose up -d --build
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}