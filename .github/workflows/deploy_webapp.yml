name: Deploy Webapp

on:
  push:
    branches:
      - Tests

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh                
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa 
        chmod 600 ~/.ssh/id_rsa       
        ssh-keyscan -H "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts

    - name: Build and Run Docker Container
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << EOF
          cd git_local/bewerbungsmaster
          docker compose down || true
          docker compose up -d --build
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Run Pytests inside the container
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << EOF
          # List all running containers and check the name of your container
          docker ps
          
          # Get the container ID or name (you can adjust this if you need a more specific filter)
          echo "test"
          docker ps -q --filter "name=backend_bewerbungsmaster"
          echo "test2"
          echo "$(sudo docker ps -q --filter 'name=backend_bewerbungsmaster')"
          echo "test3"
          echo $(sudo sh -c "docker ps -q --filter \"name=backend_bewerbungsmaster\"")
          echo "test_ende"
          container_id=$(docker ps -q --filter "name=backend_bewerbungsmaster")
          echo "test4"
          echo $container_id
          container_id=$(echo "$container_id" | xargs)
          echo $container_id
          echo "test5"
          docker ps -q --filter "name=backend_bewerbungsmaster"
          
          # If no container found, print error and exit
          if [ -z "$container_id" ]; then
            echo "Error: No container found. Available containers:"
            docker ps
            exit 1
          fi
          
          # Run pytest inside the container
          docker exec -t "$container_id" bash -c "cd /path/to/your/backend/tests && pytest"
        EOF
